{"note":"Don't delete this file! It's used internally to help with page regeneration.","body":"spry-php/loader\r\n===\r\n\r\n[![Buildi Status](https://travis-ci.org/spry-php/loader.png?branch=master)](https://travis-ci.org/spry-php/loader)\r\n\r\nA simple autoloading library adhering to PSR-0.\r\n\r\nUsage\r\n---\r\n\r\nFirst of all include the library and instantiate it.\r\n\r\n```php\r\n<?php\r\n\r\ninclude '/path/to/vendor/library/Spry/Loader/Autoloader.php';\r\n$autoloader = new Spry\\Loader\\Autoloader;\r\n```\r\n\r\nThe best way to use the autoloader for performance reasons is to provide it with a class map.\r\n\r\n```php\r\n$classMap = [\r\n    'Spry\\Router\\Routing'  => '/path/to/Spry/Router/Routing.php',\r\n    'Spry\\Router\\RouteMap' => '/path/to/Spry/Router/RouteMap.php'\r\n];\r\n\r\n$autoloader->registerClasses($classMap)\r\n           ->register();\r\n\r\n$routing  = new Spry\\Router\\Routing;\r\n$routeMap = new Spry\\Router\\RouteMap;\r\n```\r\n\r\nAnother option would be to set paths to namespaces and/or prefixes.\r\n\r\n```php\r\n$namespaces = [\r\n    'Spry' => '/path/to/Spry',\r\n    'Zend' => '/path/to/ZendFramework'\r\n];\r\n\r\n$autoloader->registerNamespaces($namespaces)\r\n           ->register();\r\n\r\n$routing     = new Spry\\Router\\Routing;\r\n$httpRequest = new Zend\\Http\\Request; // e.g. ZF2 namespaced components\r\n```\r\n\r\nor\r\n\r\n```php\r\n$prefixes = [\r\n    'Zend_' => '/path/to/ZendFramework'\r\n];\r\n\r\n$autoloader->registerPrefixes($prefixes)\r\n           ->register();\r\n\r\n$httpRequest = new Zend_Http_Request; // e.g ZF1 prefixed components\r\n```","name":"Loader","tagline":"Simple autoloading library adhering to PSR-0","google":""}